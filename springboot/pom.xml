<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.1.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.sedona.test</groupId>
	<artifactId>microservice-spring</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>microservice-spring</name>
	<description>Demo project for Spring Boot</description>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-undertow</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

    <modules>
        <module>microservice-spring-a</module>
        <module>microservice-spring-b</module>
    </modules>
    <packaging>pom</packaging>

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<failOnMissingWebXml>false</failOnMissingWebXml>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- Maven plugins -->
		<maven-resources-plugin.version>3.0.2</maven-resources-plugin.version>
		<maven-javadoc-plugin.version>2.10.4</maven-javadoc-plugin.version>
		<maven-release-plugin.version>2.5.3</maven-release-plugin.version>
		<scm.provider.git.version>1.9.5</scm.provider.git.version>
		<maven-surefire-plugin.version>2.20</maven-surefire-plugin.version>
		<sonar-maven-plugin.version>3.3.0.603</sonar-maven-plugin.version>
		<jacoco-maven-plugin.version>0.7.9</jacoco-maven-plugin.version>
		<docker-maven-plugin.version>1.1.1</docker-maven-plugin.version>
		<swagger-codegen.plugin.version>2.2.2</swagger-codegen.plugin.version>
		<swagger.maven.plugin.version>3.1.5</swagger.maven.plugin.version>
		<!-- Sonar -->
		<project.testresult.directory>${project.basedir}/target/test-results</project.testresult.directory>
		<sonar.host.url>https://sonar.cicd.sedona.fr/</sonar.host.url>
		<sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
		<sonar.jacoco.reportPaths>${project.basedir}/target/jacoco.exec</sonar.jacoco.reportPaths>
		<sonar.java.binaries>${basedir}</sonar.java.binaries>
		<sonar.language>java</sonar.language>
		<sonar.surefire.reportsPath>${project.testresult.directory}/surefire-reports</sonar.surefire.reportsPath>
		<sonar.exclusions>
			**/model/*,**/event/*,**/commands/*,**/aggregate/*,**/autoconfigure/**Properties*,**/starter/*Service*Application*
		</sonar.exclusions>
	</properties>

	<distributionManagement>
		<repository>
			<id>sedona-nexus-releases</id>
			<name>Sedona Releases</name>
			<url>https://nexus.cicd.sedona.fr/repository/releases</url>
		</repository>
		<snapshotRepository>
			<id>sedona-nexus-snapshots</id>
			<name>Sedona Snapshots</name>
			<url>https://nexus.cicd.sedona.fr/repository/snapshots</url>
		</snapshotRepository>
	</distributionManagement>

	<repositories>
		<repository>
			<id>sedona-nexus-releases</id>
			<name>Sedona Releases</name>
			<url>https://nexus.cicd.sedona.fr/repository/releases</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>sedona-nexus-snapshots</id>
			<name>Sedona Snapshots</name>
			<url>https://nexus.cicd.sedona.fr/repository/snapshots</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/dockerfile</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/docker</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>1.0.0</version>
					<configuration>
						<serverId>sedona-registry</serverId>
						<imageName>${docker.image.name}:${docker.image.tag}</imageName>
						<forceTags>true</forceTags>
						<dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
						<resources>
							<resource>
								<targetPath>/</targetPath>
								<directory>${project.build.directory}</directory>
								<include>${project.build.finalName}.jar</include>
							</resource>
						</resources>
					</configuration>
					<executions>
						<execution>
							<id>build-image</id>
							<phase>deploy</phase>
							<goals>
								<goal>build</goal>
							</goals>
						</execution>
						<execution>
							<id>tag-image</id>
							<phase>deploy</phase>
							<goals>
								<goal>tag</goal>
							</goals>
							<configuration>
								<image>${docker.image.name}:${docker.image.tag}</image>
								<newName>${docker.image.name}:${docker.image.tag}</newName>
							</configuration>
						</execution>
						<execution>
							<id>push-image</id>
							<phase>deploy</phase>
							<goals>
								<goal>push</goal>
							</goals>
							<configuration>
								<imageName>${docker.image.name}:${docker.image.tag}</imageName>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>
